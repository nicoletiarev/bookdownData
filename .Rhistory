morosidad
library(dplyr)
library(tidyr)
library(readxl)
morosidad
airbnb <- read.csv("C:/Users/nicol/OneDrive/Escritorio/airbnb/AB_NYC_2019.csv")
airbnb <- read.csv("C:/Users/nicol/OneDrive/Escritorio/airbnb/AB_NYC_2019.csv")
AB_NYC_2019 <- read.csv("C:/Users/nicol/OneDrive/Escritorio/DATA/AB_NYC_2019.csv")
View(AB_NYC_2019)
airbnb
airbnb <- read.csv("C:/Users/nicol/OneDrive/Escritorio/DATA/AB_NYC_2019.csv")
airbnb
library(DT)
datatable(airbnb)
now(airbnb)
nrow(airbnb)
ncol(airbnb)
str(airbnb)
id <- select(airbnb, id) %>% unique
nrow(id)
sapply(airbnb, function(airbnb) sum(is.na(airbnb)))
sapply(airbnb, function(airbnb) sum(is.null(airbnb)))
airbnb <- airbnb[!is.na(airbnb$reviews_per_month),]
now(airbnb)
nrow(airbnb)
airbnb%>%
select(id, name)%>%
filter (is.na (name))
airbnb%>%
select(id, name)%>%
filter (id == "2232600")
airbnb$name[airbnb$name == ""] <- "No"
airbnb%>% select(id, name)%>% filter (is.na (name))
airbnb$host_name[airbnb$host_name == ""] <- "No"
neighbourhood_group <- select(airbnb, neighbourhood_group) %>% unique
neighbourhood_group
neighbourhood <- select(airbnb, neighbourhood) %>% unique
neighbourhood <- select(airbnb, neighbourhood) %>% unique
neighbourhood
summarise(airbnb, mean = mean(price), variance = var(price), min = min(price), max = max(price))
airbnb%>%
select(id, price)%>%
filter (price == "0")
airbnb <-airbnb [airbnb$price!="0",] #elimina los 0 summarise(airbnb, mean = mean(price), variance = var(price), min = min(price), max = max(price))
airbnb <-airbnb [airbnb$price!="0",] #elimina los 0
summarise(airbnb, mean = mean(price), variance = var(price), min = min(price), max = max(price))
summarise(airbnb, mean = mean(minimum_nights), variance = var(minimum_nights), min = min(minimum_nights), max = max(minimum_nights))
summarise(airbnb, mean = mean(minimum_nights), variance = var(minimum_nights), min = min(minimum_nights), max = max(minimum_nights))
nrow(filter(airbnb, minimum_nights>=366))
summarise(airbnb, mean = mean(minimum_nights), variance = var(minimum_nights), min = min(minimum_nights), max = max(minimum_nights))
airbnb<-airbnb[!(airbnb$minimum_nights %in% c("999","370","1000","1250","500","480","500","999","500","366","999","400","990","500")),]
summarise(airbnb, mean = mean(minimum_nights), variance = var(minimum_nights), min = min(minimum_nights), max = max(minimum_nights))
summarise(airbnb, mean = mean(number_of_reviews), variance = var(number_of_reviews), min = min(number_of_reviews), max = max(number_of_reviews))
summarise(airbnb, mean = mean(reviews_per_month), variance = var(reviews_per_month), min = min(reviews_per_month), max = max(reviews_per_month))
head(airbnb)
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
install.packages("clusterSim")
colnames(airbnb)
tail(airbnb) # Ãºltimas seis filas
airbnb[1:5, ]
library(DT)
datatable(airbnb[1:5, ])
airbnb[, 3:4]
airbnb[,3:4] # las 5 primeras filas
library(DT)
datatable(airbnb[,3:4])
airbnb[1:4,"id"]
airbnb$id
airbnb$id # las 5 primeras filas
library(DT)
datatable(airbnb$id )
library(DT)
datatable(airbnb$id)
library(DT)
datatable(airbnb$id,airbnb$id_host )
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
lista_alum <- data.frame(Nombre, Apellido, Prueba_1, Prueba_2)
lista_alum
matrixnota <- matrix(Nombre, Apellido, Prueba_1, Prueba_2)
matrixnota <- matrix( Prueba_1, Prueba_2)
Matriz <- matrix(4:55,ncol=5) # Dos formas de generar exactamente
Matriz <- matrix(4:55,nrow=8) # la misma matriz
Matriz
Matriz <- matrix(4:55,ncol=4) # Dos formas de generar exactamente
Matriz <- matrix(4:55,nrow=8) # la misma matriz
Matriz
Matriz <- matrix(4:55,ncol=4) # Dos formas de generar exactamente
Matriz <- matrix(4:55,nrow=7) # la misma matriz
Matriz
Matriz <- matrix(4:55,ncol=8) # Dos formas de generar exactamente
Matriz <- matrix(4:55,nrow=7) # la misma matriz
Matriz
length(Matriz)
nrow(Matriz)
dim(Matriz)
colnames(Matriz) <- c('Semana1','Semana2','Semana3',  'Semana4','Semana5', 'Semana6', 'Semana7', 'Semana8')
colnames(Matriz) <- c('Semana1','Semana2','Semana3',  'Semana4','Semana5', 'Semana6', 'Semana7', 'Semana8')
Matriz
rownames(Matriz) <- dias
rownames(Matriz) <- c(lunes, martes, miercoles, jueves , viernes, sabado, domingo)
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
install.packages("clusterSim")
str(airbnb)
airbnb %>% filter(neighbourhood_group  == "Brooklyn", room_type == "Entire home/apt")
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
install.packages("clusterSim")
airbnb1 <- read.csv("C:/Users/nicol/OneDrive/Escritorio/DATA/AB_NYC_2019.csv")
airbnb1[sample(nrow(airbnb1), 20), ]
airbnb <- select(airbnb1,  id, neighbourhood_group, room_type, price)
airbnb
airbnb1 <- read.csv("C:/Users/nicol/OneDrive/Escritorio/DATA/AB_NYC_2019.csv")
airbnb1 <- sample(nrow(airbnb1), 20)
airbnb <- select(airbnb1, id, neighbourhood_group, room_type, price)
airbnb <- read.csv("C:/Users/nicol/OneDrive/Escritorio/DATA/AB_NYC_2019.csv")
airbnb[sample(nrow(airbnb1), 20), ]
airbnb <- read.csv("C:/Users/nicol/OneDrive/Escritorio/DATA/AB_NYC_2019.csv")
airbnb[sample(nrow(airbnb), 20), ]
airbnb <-  select(airbnb, id, neighbourhood_group, room_type, price)
airbnb
airbnb <- read.csv("C:/Users/nicol/OneDrive/Escritorio/DATA/AB_NYC_2019.csv")
airbnb <- sample(nrow(airbnb), 20)
airbnb <-  select(airbnb, id, neighbourhood_group, room_type, price)
airbnb <- read.csv("C:/Users/nicol/OneDrive/Escritorio/DATA/AB_NYC_2019.csv")
airbnb <- sample(nrow(airbnb), 20)
airbnb <- select(airbnb, id, neighbourhood_group, room_type, price)
airbnb <- read.csv("C:/Users/nicol/OneDrive/Escritorio/DATA/AB_NYC_2019.csv")
airbnb <- sample(nrow(airbnb), 20)
airbnb <- select_c(airbnb, id, neighbourhood_group, room_type, price)
airbnb <- read.csv("C:/Users/nicol/OneDrive/Escritorio/DATA/AB_NYC_2019.csv")
airbnb <- sample(nrow(airbnb), 20)
airbnb <- c(airbnb, id, neighbourhood_group, room_type, price)
airbnb <- read.csv("C:/Users/nicol/OneDrive/Escritorio/DATA/AB_NYC_2019.csv")
airbnb <- sample(nrow(airbnb), 20)
airbnb
airbnb <- read.csv("C:/Users/nicol/OneDrive/Escritorio/DATA/AB_NYC_2019.csv")
airbnb <- tail(gairbnb, n = 20)
airbnb <- read.csv("C:/Users/nicol/OneDrive/Escritorio/DATA/AB_NYC_2019.csv")
airbnb <- tail(airbnb, n = 20)
airbnb <- select(airbnb, id, neighbourhood_group , room_type, price)
airbnb
str(airbnb)
airbnb %>% mutate(comision = price * 0.12)
airbnb
airbnb <- read.csv("C:/Users/nicol/OneDrive/Escritorio/DATA/AB_NYC_2019.csv")
airbnb <- tail(airbnb, n = 10)
airbnb <- select(airbnb, id, neighbourhood_group , room_type, price)
airbnb
str(airbnb)
airbnb %>% mutate(comision = price * 0.12)
airbnb
airbnb %>% select( id, room_type, neighbourhood_group)
airbnb %>% select(!( id:room_type:neighbourhood_group))
airbnb %>% filter(neighbourhood_group  == "Brooklyn", room_type == "Entire home/apt")
airbnb[airbnb$neighbourhood_group  == "Brooklyn", airbnb$room_type == "Entire home/apt"]
airbnb %>% arrange(neighbourhood_group , room_type)
airbnb %>% arrange( desc(room_type))
airbnb %>% slice(6:13)
airbnb %>% slice_tail(n = 6)
airbnb %>% slice_tail(n = 5)
airbnb %>% slice_max(price, n = 3)
airbnb %>% relocate(price:id)
airbnb %>% summarise(price = mean(price))
str_length(hola)
library(stringr)
str_length(hola)
str_length("hola")
A <- c("hola", "hello" )
str_sub(A, 2, 2)
str_sub(A, 2, 2) <- "X"
str_sub(A, 2, 2) <- "X"
A
str_sub(A, c(2, 2))
str_dup(A, c(2, 2))
str_pad(A, 10)
str_pad(A, 3)
str_pad(A, 3)
str_pad(A, 4)
str_pad(A, 10)
str_pad(A, 6)
str_pad(A, 10, "both")
A %>%
str_trunc(10) %>%
str_pad(10, "right")
A <- c("  hola  ", "  hello  " )
str_trim(A)
str_trim(A, "left")
str_to_upper(A)
A <- str_trim(A, "left")
A <- str_trim(A, "left")
str_trim(A, "left")
A <- c("hola", "hello" )
str_to_upper(A)
A <- c("hola", "hello" )
A <- str_to_upper(A)
A <- c("hola", "hello" )
A <- str_to_upper(A)
A
str_to_title(A)
B <- c("c", "b", "e")
str_order(x)
str_sort(x)
B <- c("c", "b", "e")
str_order(B)
str_sort(x)
str_sort(B)
numeros <- c(
"celular",
"219 733 8965",
"329-293-8753",
"casa: 579-499-7527; trabajo: 543.355.3679"
)
telefonos <- "([2-9][0-9]{2})[- .]([0-9]{3})[- .]([0-9]{4})"
str_detect(numeros, telefonos)
str_subset(numeros, telefonos)
str_count(numeros, telefonos)
str_locate(numeros, telefonos)
str_locate_all(numeros, telefonos)
str_extract(numeros, telefonos)
str_extract_all(numeros, telefonos)
str_replace(numeros, telefonos, "XXX-XXX-XXXX")
str_replace_all(numeros, telefonos, "XXX-XXX-XXXX")
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
install.packages("clusterSim")
bookdown::render_book('index.Rmd', 'bookdown::gitbook')
install.packages("clusterSim")
data(banknote, package = "mclust")
swissTib <- as_tibble(banknote)
swissTib
library(DT)
datatable(swissTib)
str(swissTib)
str(banknote)
install.packages("GGally")
library(GGally)
ggpairs(swissTib, mapping = aes(col = Status)) +
theme_bw()
install.packages("GGally")
pca <- select(swissTib, -Status) %>%
prcomp(center = TRUE, scale = TRUE)
pca
summary(pca)
ggpairs(swissTib, mapping = aes(col = Status)) +
theme_bw()
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
install.packages("clusterSim")
map_dfc(1:6, ~pca$rotation[, .] * sqrt(pca$sdev ^ 2)[.])
install.packages("factoextra")
library(factoextra)
pcaDat <- get_pca(pca)
pcaDat <- get_pca(pca)
fviz_pca_biplot(pca, label = "var")
fviz_pca_var(pca)
fviz_screeplot(pca, addlabels = TRUE, choice = "eigenvalue")
fviz_screeplot(pca, addlabels = TRUE, choice = "variance")
fviz_screeplot(pca, addlabels = TRUE, choice = "variance")
fviz_screeplot(pca, addlabels = TRUE, choice = "eigenvalue")
str(iris)
iris
summary(irisTib)
imp <- impute(titanicClean, cols = list(Age = imputeMean()))
install.packages("mlr", dependencies = TRUE)
install.packages("mlr", dependencies = TRUE)
install.packages("datasets")
install.packages("tidyverse")
install.packages("datasets")
install.packages("kernlab")
install.packages("XML", repos = "http://www.omegahat.net/R")
library(mlr)
library(tidyverse)
install.packages("titanic")
data(titanic_train, package = "titanic")
titanicTib <- as_tibble(titanic_train)
library(DT)
datatable(titanicTib)
str(titanicTib)
fctrs <- c("Survived", "Sex", "Pclass")
titanicClean <- titanicTib %>%
mutate_at(.vars = fctrs, .funs = factor) %>%
mutate(FamSize = SibSp + Parch) %>%
select(Survived, Pclass, Sex, Age, Fare, FamSize)
library(DT)
datatable(titanicClean)
str(titanicClean)
titanicUntidy <- gather(titanicClean, key = "Variable", value = "Value", -Survived)
datatable(titanicUntidy )
titanicUntidy %>%
filter(Variable != "Pclass" & Variable != "Sex") %>%
ggplot(aes(Survived, as.numeric(Value))) +
facet_wrap(~ Variable, scales = "free_y") +
geom_violin(draw_quantiles = c(0.25, 0.5, 0.75)) +
theme_bw()
titanicUntidy %>%
filter(Variable == "Pclass" | Variable == "Sex") %>%
ggplot(aes(Value, fill = Survived)) +
facet_wrap(~ Variable, scales = "free_x") +
geom_bar(position = "fill") +
theme_bw()
imp <- impute(titanicClean, cols = list(Age = imputeMean()))
imp
titanicTask <- makeClassifTask(data = imp$data, target = "Survived")
imp$data$Age
titanicTask <- makeClassifTask(data = imp$data, target = "Survived")
